"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[9417],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return p}});var r=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var u=r.createContext({}),s=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},d=function(t){var e=s(t.components);return r.createElement(u.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,u=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),g=s(n),p=i,f=g["".concat(u,".").concat(p)]||g[p]||c[p]||o;return n?r.createElement(f,a(a({ref:e},d),{},{components:n})):r.createElement(f,a({ref:e},d))}));function p(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=g;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=t,l.mdxType="string"==typeof t?t:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8521:function(t,e,n){n.r(e),n.d(e,{assets:function(){return d},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(83117),i=n(80102),o=(n(67294),n(3905)),a=["components"],l={},u="Introduction",s={unversionedId:"signing/introduction",id:"signing/introduction",title:"Introduction",description:"eIDAS",source:"@site/docs/30-signing/01-introduction.md",sourceDirName:"30-signing",slug:"/signing/introduction",permalink:"/docs/signing/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Current Versions",permalink:"/docs/certificate-key/current-versions"},next:{title:"AdES Signature Formats",permalink:"/docs/signing/ades-formats/overview"}},d={},c=[],g={toc:c};function p(t){var e=t.components,l=(0,i.Z)(t,a);return(0,o.kt)("wrapper",(0,r.Z)({},g,l,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("div",{class:"text--center"},(0,o.kt)("p",null,(0,o.kt)("img",{alt:"eIDAS",src:n(26008).Z,title:"eIDAS logo",width:"306",height:"306"}))),(0,o.kt)("p",null,"The CZERTAINLY Signing is a set of modules and implementations that enables eIDAS compliant remote signing on advanced or qualified assurance level.\nIt is a everything you need package, which is further developed in time to support varios technologies and use cases."),(0,o.kt)("p",null,"The SignServer comes with a number of out-of-the-box available modules and functionality. CZERTAINLY Signing builds on top of the SignServer in order to provide additional functionality."),(0,o.kt)("p",null,"The CZERTAINLY Signing adds the following parts:"),(0,o.kt)("table",null,(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"SAML 2.0 Authorizer")),(0,o.kt)("td",null,"Using the SAML 2.0 Authorizer, you can configure the behaviour of the request authorization based on the SAML signed assertions. Request are authorized only when the assertion contains trusted and validated data.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"Extended JWS Authorizer")),(0,o.kt)("td",null,"Using the Extended JWS Authorizer, you can configure the behaviour of the request authorization based on the JWS. Request are authorized only when the claims of the valid JWS contains trusted and validated data.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"AdES Signature Formats")),(0,o.kt)("td",null,"Configure PAdES, XAdES, CAdES, JAdES or ASiC signature formats and sign documents and data compliant to eIDAS regulation. Integration with DSS framework provides support for all relevant format levels and use cases.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"AdES Signature Validation")),(0,o.kt)("td",null,"Validate signatures in a compliant way to eIDAS regulation. Integration with DSS framework provides support for custom validation policies and validation reports.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"QSCD Integration")),(0,o.kt)("td",null,"Integration and configuration of various QSCDs (Qualified Signature Creation Device) within the Signer and guidance on how to use it.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"SAM Integration")),(0,o.kt)("td",null,"SAM (Signature Activation Module) integration and configuration with the Signers to achieve remote signing and sealing on qualified assurance level.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"AWS KMS CryptoToken Support")),(0,o.kt)("td",null,"Support for AWS Key Management Service to manage cryptographic keys.")))),(0,o.kt)("p",null,"Moreover, the following part seamlessly integrates with the CZERTAINLY Signing and are optional:"),(0,o.kt)("table",null,(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"Windows KSP Module")),(0,o.kt)("td",null,"Signature module for Windows environment, which provides integration with the KSP (Key Storage Provider) to sign documents and data through Windows applications on the SignServer.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("b",null,"DMR")),(0,o.kt)("td",null,"Dashboarding, Monitoring, and Reporting module for the SignServer cluster.")))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"When you are looking for eIDAS compliant signing solution on top of SignServer, you might be already aware of the SignServer technology.\nSignServer is a server-side digital signature software for any digital data such as code, PDFs, ePassports, and many more. Its main characteristics are:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"A digital signature software with high performance and high availability."),(0,o.kt)("li",{parentName:"ul"},"Operates on behalf of business applications."),(0,o.kt)("li",{parentName:"ul"},"Designed to perform automated signatures (and other cryptographic operations on digital documents)."),(0,o.kt)("li",{parentName:"ul"},"SignServer is easy to adapt to customer specific needs by using plug-ins.\n:::"))))}p.isMDXComponent=!0},26008:function(t,e,n){e.Z=n.p+"assets/images/eIDAS-ready-055cf924d07dd1d1f53731824b6c6c29.svg"}}]);