"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[5283],{3905:function(n,e,t){t.d(e,{Zo:function(){return m},kt:function(){return f}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=r.createContext({}),u=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},m=function(n){var e=u(n.components);return r.createElement(c.Provider,{value:e},n.children)},p="mdxType",l={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,c=n.parentName,m=s(n,["components","mdxType","originalType","parentName"]),p=u(t),g=i,f=p["".concat(c,".").concat(g)]||p[g]||l[g]||o;return t?r.createElement(f,a(a({ref:e},m),{},{components:t})):r.createElement(f,a({ref:e},m))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=g;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=n,s[p]="string"==typeof n?n:i,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},73233:function(n,e,t){t.r(e),t.d(e,{assets:function(){return m},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=t(83117),i=t(80102),o=(t(67294),t(3905)),a=["components"],s={},c="Dynamic Configuration Signer Sample Configuration",u={unversionedId:"signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",id:"signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",title:"Dynamic Configuration Signer Sample Configuration",description:"The following is a sample configuration of the DynamicConfigSigner:",source:"@site/docs/30-signing/30-sam-integration/07-entrust-sam/11-samples/06-sample-dynamic-config-signer.md",sourceDirName:"30-signing/30-sam-integration/07-entrust-sam/11-samples",slug:"/signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",permalink:"/docs/signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",draft:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/30-signing/30-sam-integration/07-entrust-sam/11-samples/06-sample-dynamic-config-signer.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Entrust SAM Sample OneTime Configuration",permalink:"/docs/signing/sam-integration/entrust-sam/samples/sample-onetime-configuration"},next:{title:"Introduction",permalink:"/docs/signing/sam-integration/trident-sam/overview"}},m={},p=[],l={toc:p},g="wrapper";function f(n){var e=n.components,t=(0,i.Z)(n,a);return(0,o.kt)(g,(0,r.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dynamic-configuration-signer-sample-configuration"},"Dynamic Configuration Signer Sample Configuration"),(0,o.kt)("p",null,"The following is a sample configuration of the ",(0,o.kt)("inlineCode",{parentName:"p"},"DynamicConfigSigner"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# Type of worker\nWORKERGENID1.TYPE=PROCESSABLE\n\n# Name for other workers to reference this worker\nWORKERGENID1.NAME=EntrustDynamicConfigSigner\n\n# Implementation class and Crypto Token reference\nWORKERGENID1.IMPLEMENTATION_CLASS=com.czertainly.signserver.module.entrustsam.signer.DynamicConfigSigner\nWORKERGENID1.CRYPTOTOKEN=PKCS11CryptoToken\n# The private key of the Configuration Privileged User\nWORKERGENID1.DEFAULTKEY=cpu1\n\n# A name of a crypto token containing private key and user certificate. Will be used to authenticate crypto token to Entrust SAM.\nWORKERGENID1.OTHER_SIGNERS=EntrustClientKeyStore\n# the private key of the Operation Privileged User\nWORKERGENID1.ENTRUST_CLIENT_AUTHENTICATION_KEY_ALIAS=opu1\n\n# Entrust SAM server\nWORKERGENID1.ENTRUST_SAM_SERVER=https://213.121.187.216:10462\nWORKERGENID1.ENTRUST_TRUST_SELF_SIGNED=true\nWORKERGENID1.ENTRUST_CONNECTION_POOL_SIZE=20\n")))}f.isMDXComponent=!0}}]);