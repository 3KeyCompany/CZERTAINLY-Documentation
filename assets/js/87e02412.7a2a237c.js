"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[7612],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(t),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},49694:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return u}});var r=t(83117),o=t(80102),i=(t(67294),t(3905)),a=["components"],p={},l="From 1.0.12 To 1.0.13",c={unversionedId:"signing/upgrade-information/upgrade-1.0.12-1.0.13",id:"signing/upgrade-information/upgrade-1.0.12-1.0.13",title:"From 1.0.12 To 1.0.13",description:"In release version 1.0.13 the following changes were made as part of the refactoring of the eIDAS packages:",source:"@site/docs/30-signing/99-upgrade-information/03-upgrade-1.0.12-1.0.13.md",sourceDirName:"30-signing/99-upgrade-information",slug:"/signing/upgrade-information/upgrade-1.0.12-1.0.13",permalink:"/docs/signing/upgrade-information/upgrade-1.0.12-1.0.13",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"From 1.0.13 To 1.14.0",permalink:"/docs/signing/upgrade-information/upgrade-1.0.13-1.14.0"},next:{title:"Feedback and Support",permalink:"/docs/feedback-support"}},s={},u=[{value:"Split one-time signing package",id:"split-one-time-signing-package",level:2},{value:"CA Connector",id:"ca-connector",level:3},{value:"Entrust SAM",id:"entrust-sam",level:3},{value:"Trident SAM",id:"trident-sam",level:3}],m={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"from-1012-to-1013"},"From 1.0.12 To 1.0.13"),(0,i.kt)("p",null,"In release version ",(0,i.kt)("inlineCode",{parentName:"p"},"1.0.13")," the following changes were made as part of the refactoring of the eIDAS packages:"),(0,i.kt)("h2",{id:"split-one-time-signing-package"},"Split one-time signing package"),(0,i.kt)("p",null,"Split of the package for one-time signing using ",(0,i.kt)("inlineCode",{parentName:"p"},"Entrust")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Trident")," SAM was done. The following classes needs to be reconfigured for the applicable workers:"),(0,i.kt)("h3",{id:"ca-connector"},"CA Connector"),(0,i.kt)("p",null,"New implementation class for ",(0,i.kt)("inlineCode",{parentName:"p"},"EjbcaWSSAMCAConnector")," is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"company.threekey.signserver.module.sam.onetime.caconnector.EjbcaWSSAMCAConnector\n")),(0,i.kt)("p",null,"New implementation class for ",(0,i.kt)("inlineCode",{parentName:"p"},"LocalSelfSignedCA")," is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"company.threekey.signserver.module.sam.onetime.caconnector.LocalSelfSignedCA\n")),(0,i.kt)("h3",{id:"entrust-sam"},"Entrust SAM"),(0,i.kt)("p",null,"New implementation class for ",(0,i.kt)("inlineCode",{parentName:"p"},"EntrustSAMOneTimeCryptoWorker")," is: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"company.threekey.signserver.module.sam.onetime.entrust.EntrustSAMOneTimeCryptoWorker\n")),(0,i.kt)("h3",{id:"trident-sam"},"Trident SAM"),(0,i.kt)("p",null,"New implementation class for ",(0,i.kt)("inlineCode",{parentName:"p"},"OneTimeSAMCryptoWorker")," is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"company.threekey.signserver.module.sam.onetime.trident.OneTimeSAMCryptoWorker\n")),(0,i.kt)("p",null,"New implementation class for ",(0,i.kt)("inlineCode",{parentName:"p"},"OneTimeUserKeyCryptoWorker")," is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"company.threekey.signserver.module.sam.onetime.trident.OneTimeUserKeyCryptoWorker\n")))}d.isMDXComponent=!0}}]);