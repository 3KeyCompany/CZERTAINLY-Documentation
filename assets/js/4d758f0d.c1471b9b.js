"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[7027],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},f="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=p(n),m=o,d=f["".concat(l,".").concat(m)]||f[m]||s[m]||i;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[f]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88631:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return f}});var r=n(83117),o=n(80102),i=(n(67294),n(3905)),a=["components"],c={},l="Overview",p={unversionedId:"certificate-key/connectors/common-interfaces/overview",id:"certificate-key/connectors/common-interfaces/overview",title:"Overview",description:"Each Connector provides some specific functionality in the platform defined by its Function Groups.",source:"@site/docs/10-certificate-key/12-connectors/10-common-interfaces/01-overview.md",sourceDirName:"10-certificate-key/12-connectors/10-common-interfaces",slug:"/certificate-key/connectors/common-interfaces/overview",permalink:"/docs/certificate-key/connectors/common-interfaces/overview",draft:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/10-certificate-key/12-connectors/10-common-interfaces/01-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/certificate-key/connectors/overview"},next:{title:"Info Interface",permalink:"/docs/certificate-key/connectors/common-interfaces/info-interface"}},u={},f=[],s={toc:f},m="wrapper";function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Each ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector")," provides some specific functionality in the platform defined by its ",(0,i.kt)("a",{parentName:"p",href:"../../concept-design/architecture/connector#function-group"},"Function Groups"),".\nThere are the following interfaces that are mandatory to be implemented for each ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector")," independently of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Function Group"),":"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Short description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"info-interface"},"Info")),(0,i.kt)("td",{parentName:"tr",align:null},"Information about the ",(0,i.kt)("inlineCode",{parentName:"td"},"Connector"),", its ",(0,i.kt)("inlineCode",{parentName:"td"},"Function Groups"),", supported ",(0,i.kt)("inlineCode",{parentName:"td"},"Kinds"),", list of endpoints")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"health-interface"},"Health")),(0,i.kt)("td",{parentName:"tr",align:null},"Status information about the ",(0,i.kt)("inlineCode",{parentName:"td"},"Connector")," and its services")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"attributes-interface"},"Attributes")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Attributes")," definition of the ",(0,i.kt)("inlineCode",{parentName:"td"},"Connector")," specific technology and its validation")))))}d.isMDXComponent=!0}}]);