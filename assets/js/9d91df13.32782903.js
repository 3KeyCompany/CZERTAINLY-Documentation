(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[8440],{94994:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return C},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var i=n(83117),r=n(80102),o=(n(67294),n(3905)),a=n(93456),c=["components"],s={},d="Attributes Interface",l={unversionedId:"connectors/description/common-interfaces/attributes-interface",id:"connectors/description/common-interfaces/attributes-interface",title:"Attributes Interface",description:"Overview",source:"@site/docs/12-connectors/05-description/10-common-interfaces/09-attributes-interface.md",sourceDirName:"12-connectors/05-description/10-common-interfaces",slug:"/connectors/description/common-interfaces/attributes-interface",permalink:"/docs/connectors/description/common-interfaces/attributes-interface",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Health Interface",permalink:"/docs/connectors/description/common-interfaces/health-interface"},next:{title:"Credential Provider",permalink:"/docs/connectors/description/credential-provider"}},p={},u=[{value:"Overview",id:"overview",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Processes",id:"processes",level:2},{value:"Get <code>Attributes</code>",id:"get-attributes",level:3},{value:"Create object using <code>Attributes</code>",id:"create-object-using-attributes",level:3},{value:"Specification and example",id:"specification-and-example",level:2}],m={toc:u};function C(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"attributes-interface"},"Attributes Interface"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Each ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector")," has to implement the ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," interface. This interface provides information about supported ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," are specific to implementation and gives information about the data that can be exchanged and properly parsed by the ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector"),"."),(0,o.kt)("p",null,"Fo more information, refer to ",(0,o.kt)("a",{parentName:"p",href:"../../../concept-design/architecture/connector"},"Connector Architecture"),"."),(0,o.kt)("h2",{id:"how-it-works"},"How it works"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," interface provides information about all supported mandatory or optional ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," for the ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," are necessary to manage ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector")," specific objects. For more information about how ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," can be used and implemented, including details about ",(0,o.kt)("inlineCode",{parentName:"p"},"Attribute")," types, refer to ",(0,o.kt)("a",{parentName:"p",href:"/contributors/attributes"},"Contribution guide - Attributes and Callbacks"),"."),(0,o.kt)("p",null,"Each ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector")," implements interface for listing available ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," and their validation."),(0,o.kt)("h2",{id:"processes"},"Processes"),(0,o.kt)("h3",{id:"get-attributes"},"Get ",(0,o.kt)("inlineCode",{parentName:"h3"},"Attributes")),(0,o.kt)("p",null,"Because each ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector")," defines its own specific ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes"),", we need to get information about that before we can start creating and managing objects."),(0,o.kt)(a.Mermaid,{config:{theme:{light:"neutral",dark:"dark"}},chart:" %%{init: { 'sequence': {'messageFontSize':12} } }%%\nsequenceDiagram\n    autonumber\n    \n    Client->>Core: GET<br/>/v1/connectors/{uuid}/{functionGroup}/{kind}/attributes\n    Note over Client,Core: Get Attributes definition from the Connector\n    Core->>Connector: GET<br/>/v1/{functionalGroup}/{kind}/attributes\n    Note over Core,Connector: List available Attributes\n    Connector--\x3e>Core: Return Attributes\n    Core--\x3e>Client: Return Attributes",mdxType:"Mermaid"}),(0,o.kt)("h3",{id:"create-object-using-attributes"},"Create object using ",(0,o.kt)("inlineCode",{parentName:"h3"},"Attributes")),(0,o.kt)("p",null,"When you have a list of available ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," supported by the ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector"),", you can create objects like ",(0,o.kt)("inlineCode",{parentName:"p"},"Authority"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Credential"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Discovery"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Entity"),", etc. For this operation you need to provide at least mandatory ",(0,o.kt)("inlineCode",{parentName:"p"},"Attribute")," values that are validated against the definition and if success, the object is created."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The following example is creating ",(0,o.kt)("inlineCode",{parentName:"p"},"Credential")," object. The same approach can be used for other objects that can be created based on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," definition and specific ",(0,o.kt)("inlineCode",{parentName:"p"},"Connector"),".")),(0,o.kt)(a.Mermaid,{chart:"sequenceDiagram\n    autonumber\n    \n    Client->>Core: POST /v1/credentials\n    Note over Client,Core: Add Credential with Attributes\n    Core->>Core: Check existence of Connector and Credential\n    Core->>Connector: POST /v1/{functionalGroup}/{kind}/attributes/validate\n    Note over Core,Connector: Validate Attributes\n    Connector--\x3e>Core: Return validation result\n    Core->>Core: Store Credential\n    Core--\x3e>Client: Return Credential UUID",mdxType:"Mermaid"}),(0,o.kt)("h2",{id:"specification-and-example"},"Specification and example"),(0,o.kt)("p",null,"You can find specification and information about the ",(0,o.kt)("inlineCode",{parentName:"p"},"Attributes")," interface on the following locations:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/core-connector/"},"Core Connector API")),(0,o.kt)("li",{parentName:"ul"},"Connector API specifications, see for example ",(0,o.kt)("a",{parentName:"li",href:"/api/connector-authority-provider-v2/"},"Authority Provider"))))}C.isMDXComponent=!0},11748:function(e,t,n){var i={"./locale":89234,"./locale.js":89234};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=o,e.exports=r,r.id=11748}}]);