"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[2719],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=p(n),m=a,d=f["".concat(c,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9762:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},c="Interfaces",p={unversionedId:"concept-design/architecture/interfaces",id:"concept-design/architecture/interfaces",title:"Interfaces",description:"The platform consists of a set of interfaces related to the platform APIs and communication with Connector.",source:"@site/docs/02-concept-design/02-architecture/03-interfaces.md",sourceDirName:"02-concept-design/02-architecture",slug:"/concept-design/architecture/interfaces",permalink:"/docs/concept-design/architecture/interfaces",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Core",permalink:"/docs/concept-design/architecture/core"},next:{title:"Connector",permalink:"/docs/concept-design/architecture/connector"}},s={},u=[{value:"<code>Client</code> Web Interfaces",id:"client-web-interfaces",level:2},{value:"<code>Client</code> REST API",id:"client-rest-api",level:2},{value:"<code>Connector</code> Interfaces",id:"connector-interfaces",level:2},{value:"<code>Core</code> Interfaces",id:"core-interfaces",level:2}],f={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interfaces"},"Interfaces"),(0,i.kt)("p",null,"The platform consists of a set of interfaces related to the platform APIs and communication with ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector"),"."),(0,i.kt)("p",null,"These interfaces must be generally applied when extending the platform, in case you would like to develop custom ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector")," providing some specific functionality or implementing some proprietary protocols."),(0,i.kt)("p",null,"The platform consists of the following interfaces:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Client Web Interfaces (Administrator and Operator)"),(0,i.kt)("li",{parentName:"ul"},"Client REST API"),(0,i.kt)("li",{parentName:"ul"},"Connector Interfaces"),(0,i.kt)("li",{parentName:"ul"},"Core Interfaces")),(0,i.kt)("p",null,"To know more about the list of APIs refer to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/3KeyCompany/CZERTAINLY-Interfaces"},"Interfaces Repository"),"."),(0,i.kt)("h2",{id:"client-web-interfaces"},(0,i.kt)("inlineCode",{parentName:"h2"},"Client")," Web Interfaces"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Client")," web interfaces are graphical representation for the user. There are the following ",(0,i.kt)("inlineCode",{parentName:"p"},"Client")," web interfaces:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Interface"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Administrator")),(0,i.kt)("td",{parentName:"tr",align:null},"Management of the platform. This interface includes administrative components and administrative operations.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Operator")),(0,i.kt)("td",{parentName:"tr",align:null},"Provides certificate and cryptographic key related operations.")))),(0,i.kt)("h2",{id:"client-rest-api"},(0,i.kt)("inlineCode",{parentName:"h2"},"Client")," REST API"),(0,i.kt)("p",null,"Platform offers REST API to communicate with the platform. REST API can be split into two major categories:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Interface"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Administration")),(0,i.kt)("td",{parentName:"tr",align:null},"For administrative operations.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Client Operations")),(0,i.kt)("td",{parentName:"tr",align:null},"For certificate and cryptographic key related operations.")))),(0,i.kt)("h2",{id:"connector-interfaces"},(0,i.kt)("inlineCode",{parentName:"h2"},"Connector")," Interfaces"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector")," interface implements specific technology that can be connected with the platform. Depending on the technology and use-case, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector")," may be of different ",(0,i.kt)("inlineCode",{parentName:"p"},"Types")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Functional Groups"),"."),(0,i.kt)("p",null,"Each ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector")," has to implement at least the following interfaces:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Attributes"),(0,i.kt)("li",{parentName:"ul"},"Health"),(0,i.kt)("li",{parentName:"ul"},"Info")),(0,i.kt)("h2",{id:"core-interfaces"},(0,i.kt)("inlineCode",{parentName:"h2"},"Core")," Interfaces"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Core")," interfaces are used by the platform to communicate with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Connector")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"Client"),"."),(0,i.kt)("p",null,"You can find the description of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Core")," interfaces in the following sections:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/3KeyCompany/CZERTAINLY-Interfaces/tree/develop/src/main/java/com/czertainly/api/interfaces/core"},"Core interfaces"))))}m.isMDXComponent=!0}}]);