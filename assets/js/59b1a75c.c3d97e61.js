(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[2563],{5737:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return h},toc:function(){return p}});var o=n(83117),i=n(80102),a=(n(67294),n(3905)),r=n(93456),c=["components"],l={},s="Health Interface",h={unversionedId:"connectors/description/common-interfaces/health-interface",id:"connectors/description/common-interfaces/health-interface",title:"Health Interface",description:"Overview",source:"@site/docs/12-connectors/05-description/10-common-interfaces/06-health-interface.md",sourceDirName:"12-connectors/05-description/10-common-interfaces",slug:"/connectors/description/common-interfaces/health-interface",permalink:"/docs/connectors/description/common-interfaces/health-interface",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Info Interface",permalink:"/docs/connectors/description/common-interfaces/info-interface"},next:{title:"Attributes Interface",permalink:"/docs/connectors/description/common-interfaces/attributes-interface"}},u={},p=[{value:"Overview",id:"overview",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Health-check information",id:"health-check-information",level:2},{value:"Processes",id:"processes",level:2},{value:"Health-check",id:"health-check",level:3},{value:"Specification and example",id:"specification-and-example",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"health-interface"},"Health Interface"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Each ",(0,a.kt)("inlineCode",{parentName:"p"},"Connector")," has to implement the ",(0,a.kt)("inlineCode",{parentName:"p"},"Health")," interface. This interface provides information about the status of services on which the ",(0,a.kt)("inlineCode",{parentName:"p"},"Connector")," depends like database, HSM and so on. Although it is mandatory to implement ",(0,a.kt)("inlineCode",{parentName:"p"},"Health")," interface, it is fully up to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Connector")," implementation what information will be provided."),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Health")," interface provides current information about the status of the services provided by the ",(0,a.kt)("inlineCode",{parentName:"p"},"Connector")," whenever it is requested.\nTypically, when you would like to access details of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Connector"),", you can request information about its status."),(0,a.kt)("h2",{id:"health-check-information"},"Health-check information"),(0,a.kt)("p",null,"The status information contains the following structure:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"overall status of the ",(0,a.kt)("inlineCode",{parentName:"li"},"Connector")),(0,a.kt)("li",{parentName:"ul"},"partial information about the service (which can contain any information and status)")),(0,a.kt)("p",null,"The status can be one of the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("span",{class:"badge badge--success"},"ok")," - service is running as expected"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("span",{class:"badge badge--danger"},"nok")," - there is a problem with the service, you should check the `Connector`"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("span",{class:"badge badge--secondary"},"unknown")," - status information not available")),(0,a.kt)("h2",{id:"processes"},"Processes"),(0,a.kt)("h3",{id:"health-check"},"Health-check"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Client")," with proper permissions can request health-check of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Connectors")," and invoke API that works with the ",(0,a.kt)("inlineCode",{parentName:"p"},"Health")," interface of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Connector"),".\nThe following diagrams represents the requests and communication flow."),(0,a.kt)(r.Mermaid,{config:{theme:{light:"neutral",dark:"dark"}},chart:"sequenceDiagram\n    autonumber\n    \n    Client->>Core: GET /v1/connectors/{uuid}/health\n    Note over Client,Core: Check health of the Connector\n    Core->>Connector: GET /v1/health\n    Note over Core,Connector: Get status information of the Connector\n    Connector--\x3e>Core: Return status\n    Core--\x3e>Client: Return status",mdxType:"Mermaid"}),(0,a.kt)("h2",{id:"specification-and-example"},"Specification and example"),(0,a.kt)("p",null,"You can find specification and information about the ",(0,a.kt)("inlineCode",{parentName:"p"},"Health")," interface on the following locations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/core-connector/"},"Core Connector API")),(0,a.kt)("li",{parentName:"ul"},"Connector API specifications, see for example ",(0,a.kt)("a",{parentName:"li",href:"/api/connector-authority-provider-v2/"},"Authority Provider"))))}f.isMDXComponent=!0},11748:function(e,t,n){var o={"./locale":89234,"./locale.js":89234};function i(e){var t=a(e);return n(t)}function a(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id=11748}}]);