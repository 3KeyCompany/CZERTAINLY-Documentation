"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[5283],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(t),f=i,g=m["".concat(c,".").concat(f)]||m[f]||l[f]||o;return t?r.createElement(g,a(a({ref:n},p),{},{components:t})):r.createElement(g,a({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},73233:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=t(83117),i=t(80102),o=(t(67294),t(3905)),a=["components"],s={},c="Dynamic Configuration Signer Sample Configuration",u={unversionedId:"signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",id:"signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",title:"Dynamic Configuration Signer Sample Configuration",description:"The following is a sample configuration of the DynamicConfigSigner:",source:"@site/docs/30-signing/30-sam-integration/07-entrust-sam/11-samples/06-sample-dynamic-config-signer.md",sourceDirName:"30-signing/30-sam-integration/07-entrust-sam/11-samples",slug:"/signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",permalink:"/docs/signing/sam-integration/entrust-sam/samples/sample-dynamic-config-signer",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Entrust SAM Sample OneTime Configuration",permalink:"/docs/signing/sam-integration/entrust-sam/samples/sample-onetime-configuration"},next:{title:"Introduction",permalink:"/docs/signing/sam-integration/trident-sam/overview"}},p={},l=[],m={toc:l};function f(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dynamic-configuration-signer-sample-configuration"},"Dynamic Configuration Signer Sample Configuration"),(0,o.kt)("p",null,"The following is a sample configuration of the ",(0,o.kt)("inlineCode",{parentName:"p"},"DynamicConfigSigner"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# Type of worker\nWORKERGENID1.TYPE=PROCESSABLE\n\n# Name for other workers to reference this worker\nWORKERGENID1.NAME=EntrustDynamicConfigSigner\n\n# Implementation class and Crypto Token reference\nWORKERGENID1.IMPLEMENTATION_CLASS=com.czertainly.signserver.module.entrustsam.signer.DynamicConfigSigner\nWORKERGENID1.CRYPTOTOKEN=PKCS11CryptoToken\n# The private key of the Configuration Privileged User\nWORKERGENID1.DEFAULTKEY=cpu1\n\n# A name of a crypto token containing private key and user certificate. Will be used to authenticate crypto token to Entrust SAM.\nWORKERGENID1.OTHER_SIGNERS=EntrustClientKeyStore\n# the private key of the Operation Privileged User\nWORKERGENID1.ENTRUST_CLIENT_AUTHENTICATION_KEY_ALIAS=opu1\n\n# Entrust SAM server\nWORKERGENID1.ENTRUST_SAM_SERVER=https://213.121.187.216:10462\nWORKERGENID1.ENTRUST_TRUST_SELF_SIGNED=true\nWORKERGENID1.ENTRUST_CONNECTION_POOL_SIZE=20\n")))}f.isMDXComponent=!0}}]);