"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[1876],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},54106:function(e,t,n){n.r(t),n.d(t,{GenTable:function(){return g},assets:function(){return d},basic:function(){return f},contentTitle:function(){return u},data:function(){return m},default:function(){return b},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(83117),a=n(80102),i=n(67294),o=n(3905),s=["components"],l={},u="REST Signature SAP Provider",p={unversionedId:"signing/sam-integration/trident-sam/signature-sap-providers/rest",id:"signing/sam-integration/trident-sam/signature-sap-providers/rest",title:"REST Signature SAP Provider",description:"The implementation class of the REST Signature SAP Provider is:",source:"@site/docs/30-signing/30-sam-integration/09-trident-sam/07-signature-sap-providers/03-rest.mdx",sourceDirName:"30-signing/30-sam-integration/09-trident-sam/07-signature-sap-providers",slug:"/signing/sam-integration/trident-sam/signature-sap-providers/rest",permalink:"/docs/signing/sam-integration/trident-sam/signature-sap-providers/rest",draft:!1,editUrl:"https://github.com/3KeyCompany/CZERTAINLY-Documentation/edit/documentation/docs/30-signing/30-sam-integration/09-trident-sam/07-signature-sap-providers/03-rest.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/signing/sam-integration/trident-sam/signature-sap-providers/overview"},next:{title:"Introduction",permalink:"/docs/signing/sam-integration/trident-sam/km-sap-providers/overview"}},d={},c=[{value:"Authorization types",id:"authorization-types",level:2},{value:"BASIC",id:"basic",level:3},{value:"OpenAPI Definition",id:"openapi-definition",level:2}],m=[{property:"SAP_PROVIDER_URL",description:(0,o.kt)(i.Fragment,null,"URL to get the Signature Activation Data. The URL should implement REST interface of this provider."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"NONE")),mandatory:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--success"},"YES"))},{property:"SAP_PROVIDER_AUTH_TYPE",description:(0,o.kt)(i.Fragment,null,"Authorization type for the REST API. Supported values are:",(0,o.kt)("ul",null,(0,o.kt)("li",null,"NONE"),(0,o.kt)("li",null,"BASIC")),"See information about the authentication properties below."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"NONE")),mandatory:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--success"},"YES"))}],g=function(e){var t=e.data;return(0,o.kt)(i.Fragment,null,t.map((function(e,t){return(0,o.kt)("tr",{key:t},(0,o.kt)("td",null,(0,o.kt)("b",null,e.property)),(0,o.kt)("td",null,e.description),(0,o.kt)("td",null,e.default),(0,o.kt)("td",null,e.mandatory))})))},f=[{property:"SAP_PROVIDER_USERNAME",description:(0,o.kt)(i.Fragment,null,"Identification of the user."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"NONE")),mandatory:(0,o.kt)(i.Fragment,null,"Mandatory for ",(0,o.kt)("b",null,"SAP_PROVIDER_AUTH_TYPE = BASIC"))},{property:"SAP_PROVIDER_PASSWORD",description:(0,o.kt)(i.Fragment,null,"Password for the username."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"NONE")),mandatory:(0,o.kt)(i.Fragment,null,"Mandatory for ",(0,o.kt)("b",null,"SAP_PROVIDER_AUTH_TYPE = BASIC"))}],y={toc:c,data:m,GenTable:g,basic:f},S="wrapper";function b(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)(S,(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rest-signature-sap-provider"},"REST Signature SAP Provider"),(0,o.kt)("p",null,"The implementation class of the REST Signature SAP Provider is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"com.czertainly.trident.sam.sap.RestSignatureSapProvider\n")),(0,o.kt)("p",null,"The following properties can be configured for the REST Signature SAP Provider:"),(0,o.kt)("table",null,(0,o.kt)("th",null,"Property"),(0,o.kt)("th",null,"Description"),(0,o.kt)("th",null,"Default Value"),(0,o.kt)("th",null,"Mandatory"),(0,o.kt)("tbody",null,(0,o.kt)(g,{data:m,mdxType:"GenTable"}))),(0,o.kt)("h2",{id:"authorization-types"},"Authorization types"),(0,o.kt)("h3",{id:"basic"},"BASIC"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"SAP_PROVIDER_AUTH_TYPE = BASIC")," needs additional properties to be configured, in particular:"),(0,o.kt)("table",null,(0,o.kt)("th",null,"Property"),(0,o.kt)("th",null,"Description"),(0,o.kt)("th",null,"Default Value"),(0,o.kt)("th",null,"Mandatory"),(0,o.kt)("tbody",null,(0,o.kt)(g,{data:f,mdxType:"GenTable"}))),(0,o.kt)("h2",{id:"openapi-definition"},"OpenAPI Definition"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"openapi: 3.0.3\ninfo:\n  title: REST Signature SAP Provider\n  version: v1\npaths:\n  /buildSad:\n    post:\n      operationId: buildSad\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuildSadRequestDTO'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/BuildSadResponseDTO'\ncomponents:\n  schemas:\n    BuildSadRequestDTO:\n      type: object\n      properties:\n        uid:\n          type: string\n        keyId:\n          type: string\n        data:\n          type: array\n          items:\n            type: string\n            format: byte\n        hashAlg:\n          type: string\n          enum:\n          - RAWDATA\n          - MD5\n          - SHA1\n          - RIPEMD160\n          - SHA224\n          - SHA256\n          - SHA384\n          - SHA512\n          - WHIRLPOOL\n        awkr:\n          type: string\n          enum:\n          - PKCS1_15\n          - PKCS1_OAEP\n          - PKCS1_PSS\n          - SSLV23\n          - ECDSA\n          - SPHINCS\n          - SCHNORR\n    BuildResponseDTO:\n      type: object\n      properties:\n        body:\n          type: array\n          items:\n            type: string\n            format: byte\n        nonce:\n          type: array\n          items:\n            type: string\n            format: byte\n    BuildSadResponseDTO:\n      type: object\n      properties:\n        sad:\n          $ref: '#/components/schemas/BuildResponseDTO'\n")))}b.isMDXComponent=!0}}]);