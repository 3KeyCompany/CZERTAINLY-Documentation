"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[9670],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return h}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),h=i,f=u["".concat(l,".").concat(h)]||u[h]||d[h]||o;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},40455:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=t(83117),i=t(80102),o=(t(67294),t(3905)),a=["components"],s={},l="nCipher PKCS#11 Installation",c={unversionedId:"signing/qscd-integration/nshield-xc-cc/middleware",id:"signing/qscd-integration/nshield-xc-cc/middleware",title:"nCipher PKCS#11 Installation",description:"11 Installation",source:"@site/docs/30-signing/25-qscd-integration/09-nshield-xc-cc/09-middleware.md",sourceDirName:"30-signing/25-qscd-integration/09-nshield-xc-cc",slug:"/signing/qscd-integration/nshield-xc-cc/middleware",permalink:"/docs/signing/qscd-integration/nshield-xc-cc/middleware",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Issue and Import Certificate",permalink:"/docs/signing/qscd-integration/nshield-xc-cc/issuecert"},next:{title:"Crypto Token Configuration",permalink:"/docs/signing/qscd-integration/nshield-xc-cc/cryptotoken"}},p={},d=[{value:"Install nCipher PKCS#11 libraries",id:"install-ncipher-pkcs11-libraries",level:2},{value:"Configuration of nCipher PKCS#11 middleware",id:"configuration-of-ncipher-pkcs11-middleware",level:2},{value:"Using softcard with PKCS#11",id:"using-softcard-with-pkcs11",level:3},{value:"Configure nCipher PKCS#11 for SignServer",id:"configure-ncipher-pkcs11-for-signserver",level:2}],u={toc:d};function h(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ncipher-pkcs11-installation"},"nCipher PKCS#11 Installation"),(0,o.kt)("p",null,"nShield XC CC comes with the PKCS#11 middleware that is used in order to integrate with the PKCS#11 Crypto Token of the SignServer. You can use the following instructions in order to install the nCipher PKCS#11 middleware to be used with the SignServer."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The following document assumes installation on the Linux system, however, the steps can be reproduced on other OS with different libraries.")),(0,o.kt)("h2",{id:"install-ncipher-pkcs11-libraries"},"Install nCipher PKCS#11 libraries"),(0,o.kt)("p",null,"nCipher PKCS#11 library is installed as part of the nShield Core Tools, or ",(0,o.kt)("inlineCode",{parentName:"p"},"ctls")," package. It contains management utilities, including generatekey, diagnostic and performance tools, Remote Administration Client tools, and the PKCS#11 library."),(0,o.kt)("p",null,"Once installed, you can find the shared PKCS#11 middleware in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/opt/nfast/toolkits/pkcs11/libcknfast.so\n")),(0,o.kt)("p",null,"It is important, that the user that runs the SignServer (and the application server) has proper permission to use ",(0,o.kt)("inlineCode",{parentName:"p"},"libcknfast.so"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For information on how to install Security World software, see the appropriate ",(0,o.kt)("strong",{parentName:"p"},"nShield Installation Guide"),".")),(0,o.kt)("h2",{id:"configuration-of-ncipher-pkcs11-middleware"},"Configuration of nCipher PKCS#11 middleware"),(0,o.kt)("p",null,"There are various options how to use nCipher PKCS#11 middleware depending on the protection level (OCS, softcard).\nIt is recommended to configure the middleware according the ",(0,o.kt)("strong",{parentName:"p"},"Using the nCipher PKCS #11 library")," section of the ",(0,o.kt)("strong",{parentName:"p"},"nShield User Guide")),(0,o.kt)("h3",{id:"using-softcard-with-pkcs11"},"Using softcard with PKCS#11"),(0,o.kt)("p",null,"To use softcards with PKCS#11, you must have ",(0,o.kt)("inlineCode",{parentName:"p"},"CKNFAST_LOADSHARING")," set to a nonzero value. When using pre-loaded softcards or other objects, the PKCS#11 library automatically sets ",(0,o.kt)("inlineCode",{parentName:"p"},"CKNFAST_LOADSHARING=1")," (load-sharing mode on) unless it has been explicitly set to 0 (load-sharing mode off)."),(0,o.kt)("h2",{id:"configure-ncipher-pkcs11-for-signserver"},"Configure nCipher PKCS#11 for SignServer"),(0,o.kt)("p",null,"In order SignServer get access to the nShield XC CC, it needs to be configured and available for the SignServer. This is configured as ",(0,o.kt)("inlineCode",{parentName:"p"},"cryptotoken")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"signserver_deploy.properties")," as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cryptotoken.p11.lib.110.name = nShieldXCCC\ncryptotoken.p11.lib.110.file = /opt/nfast/toolkits/pkcs11/libcknfast.so\n")),(0,o.kt)("p",null,"Once the nCipher PKCS#11 is configured in ",(0,o.kt)("inlineCode",{parentName:"p"},"signserver_deploy.properties"),", SignServer must be redeployed to reflect changes and access the nShield XC CC."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bin/ant deploy\n")),(0,o.kt)("p",null,"Make sure the application server is running and verify that SignServer was deployed correctly."))}h.isMDXComponent=!0}}]);