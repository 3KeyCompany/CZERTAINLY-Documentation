"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[5190],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return y}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),k=o,y=u["".concat(c,".").concat(k)]||u[k]||m[k]||a;return t?r.createElement(y,i(i({ref:n},l),{},{components:t})):r.createElement(y,i({ref:n},l))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=k;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},90844:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=t(83117),o=t(80102),a=(t(67294),t(3905)),i=["components"],s={},c="Introduction",p={unversionedId:"signing/aws-kms-cryptotoken/overview",id:"signing/aws-kms-cryptotoken/overview",title:"Introduction",description:"AWS KMS CryptoToken implementation allows you to work with the keys generated and managed by the Amazon Web Services Key Management Service.",source:"@site/docs/30-signing/35-aws-kms-cryptotoken/01-overview.md",sourceDirName:"30-signing/35-aws-kms-cryptotoken",slug:"/signing/aws-kms-cryptotoken/overview",permalink:"/docs/signing/aws-kms-cryptotoken/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"REST User Management SAP Provider",permalink:"/docs/signing/sam-integration/trident-sam/user-sap-providers/rest"},next:{title:"AWS KMS v1 CryptoToken Properties",permalink:"/docs/signing/aws-kms-cryptotoken/v1-properties"}},l={},u=[{value:"AWS KMS Implementations",id:"aws-kms-implementations",level:2},{value:"AWS KMS Permissions",id:"aws-kms-permissions",level:2}],m={toc:u},k="wrapper";function y(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)(k,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"AWS KMS CryptoToken implementation allows you to work with the keys generated and managed by the ",(0,a.kt)("a",{parentName:"p",href:"https://aws.amazon.com/kms/"},"Amazon Web Services Key Management Service"),"."),(0,a.kt)("p",null,"Using the AWS KMS CryptoToken, you can achieve the same functionality with the keys stored and managed by the cloud, as with any other CryptoToken.\nFor more information about the CryptoTokens, see ",(0,a.kt)("a",{parentName:"p",href:"https://doc.primekey.com/signserver/signserver-reference/signserver-components/cryptotokens"},"SignServer CryptoTokens"),"."),(0,a.kt)("h2",{id:"aws-kms-implementations"},"AWS KMS Implementations"),(0,a.kt)("p",null,"There are 2 implementation of the AWS KMS CryptoToken:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./v1-properties"},"v1 AWS KMS CryptoToken")," - access for IAM role based on the Access Key ID and Secret Access Key provided"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./v2-properties"},"v2 AWS KMS CryptoToken")," - access using the default credential provider chain")),(0,a.kt)("h2",{id:"aws-kms-permissions"},"AWS KMS Permissions"),(0,a.kt)("p",null,"The following permissions must be set for the IAM role used to access AWS KMS keys:"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Use your own values fro ",(0,a.kt)("inlineCode",{parentName:"p"},"region")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"account"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"Action": [\n    "kms:GetPublicKey",\n    "kms:ScheduleKeyDeletion",\n    "kms:CreateAlias",\n    "kms:Sign"\n],\n"Resource": [\n    "arn:aws:kms:[region]:[account]:alias/*",\n    "arn:aws:kms:[region]:[account]:key/*"\n],\n"Action": [\n    "kms:ListAliases",\n    "kms:CreateKey"\n],\n"Resource": "*",\n"Action": "kms:DescribeKey",\n"Resource": "arn:aws:kms:[region]:[account]:key/*",\n"Action": "kms:DeleteAlias",\n"Resource": "arn:aws:kms:[region]:[account]:alias/*",\n"Action": "kms:DeleteAlias",\n"Resource": [\n    "arn:aws:kms:[region]:[account]:alias/*",\n    "arn:aws:kms:[region]:[account]:key/*"\n]\n')))}y.isMDXComponent=!0}}]);