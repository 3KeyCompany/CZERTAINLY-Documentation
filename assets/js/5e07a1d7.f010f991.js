"use strict";(self.webpackChunkczertainly=self.webpackChunkczertainly||[]).push([[6873],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=a,m=d["".concat(l,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},93641:function(e,t,n){n.r(t),n.d(t,{GenTable:function(){return m},assets:function(){return p},contentTitle:function(){return u},data:function(){return g},default:function(){return y},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(83117),a=n(80102),i=n(67294),o=n(3905),s=["components"],l={},u="Dynamic Configuration Signer",c={unversionedId:"signing/sam-integration/entrust-sam/dynamic-config-signer-properties",id:"signing/sam-integration/entrust-sam/dynamic-config-signer-properties",title:"Dynamic Configuration Signer",description:"The Dynamic Configuration Signer is a special implementation of the Signer that can be used to sign and apply dynamic configuration for the Entrust SAM.",source:"@site/docs/30-signing/30-sam-integration/07-entrust-sam/09-dynamic-config-signer-properties.mdx",sourceDirName:"30-signing/30-sam-integration/07-entrust-sam",slug:"/signing/sam-integration/entrust-sam/dynamic-config-signer-properties",permalink:"/docs/signing/sam-integration/entrust-sam/dynamic-config-signer-properties",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Metadata SAD Provider",permalink:"/docs/signing/sam-integration/entrust-sam/sad-providers/metadata"},next:{title:"Entrust SAM Sample Configuration",permalink:"/docs/signing/sam-integration/entrust-sam/samples/sample-configuration"}},p={},d=[{value:"Request Metadata",id:"request-metadata",level:2}],g=[{property:"ENTRUST_SAM_SERVER",description:(0,o.kt)(i.Fragment,null,"End point to access Entrust SAM administrative functions. The value of Entrust SAM Server should be specified if you would like to apply the dynamic configuration in the form ",(0,o.kt)("b",null,"https://[ip address or hostname]:[port]"),"."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"NONE")),mandatory:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--danger"},"NO"))},{property:"ENTRUST_TRUST_SELF_SIGNED",description:(0,o.kt)(i.Fragment,null,"True if the self-signed certificate of the Entrust SAM server can be trusted. False otherwise."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"false")),mandatory:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--danger"},"NO"))},{property:"ENTRUST_CONNECTION_POOL_SIZE",description:(0,o.kt)(i.Fragment,null,"Number as the maximum size of the pooled connections with the Entrust SAM. This value can be fine-tuned to optimize the performance of the signing process."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"30")),mandatory:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--danger"},"NO"))},{property:"OTHER_SIGNERS",description:(0,o.kt)(i.Fragment,null,"Sets the reference to the Crypto Token containing the key that is used to authenticate to the Entrust SAM. Only one value should be specified for this attribute. In case it contains multiple comma separated references to Crypto Token, the first one is taken."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"NONE")),mandatory:(0,o.kt)(i.Fragment,null,"Must be present when ",(0,o.kt)("b",null,"ENTRUST_SAM_SERVER")," is specified.")},{property:"ENTRUST_CLIENT_AUTHENTICATION_KEY_ALIAS",description:(0,o.kt)(i.Fragment,null,"Identification of the key, based on alias, that should be used to authenticate to the Entrust SAM interface. The key alias is taken from the ",(0,o.kt)("b",null,"OTHER_SIGNERS")," Crypto Token configuration. The specified key should authorize Operation Privileged User."),default:(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{class:"badge badge--secondary"},"NONE")),mandatory:(0,o.kt)(i.Fragment,null,"Must be present when ",(0,o.kt)("b",null,"ENTRUST_SAM_SERVER")," is specified.")}],m=function(e){var t=e.data;return(0,o.kt)(i.Fragment,null,t.map((function(e,t){return(0,o.kt)("tr",{key:t},(0,o.kt)("td",null,(0,o.kt)("b",null,e.property)),(0,o.kt)("td",null,e.description),(0,o.kt)("td",null,e.default),(0,o.kt)("td",null,e.mandatory))})))},f={toc:d,data:g,GenTable:m};function y(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dynamic-configuration-signer"},"Dynamic Configuration Signer"),(0,o.kt)("p",null,"The Dynamic Configuration Signer is a special implementation of the Signer that can be used to sign and apply dynamic configuration for the Entrust SAM."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This implementation is compliant with the Entrust SAM version 1.0.3.\nFor more information about the dynamic configuration, please refer to the official Entrust SAM documentation.")),(0,o.kt)("p",null,"The implementation class that must be specified for the Signer is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"com.czertainly.signserver.module.entrustsam.signer.DynamicConfigSigner\n")),(0,o.kt)("p",null,"The Dynamic Configuration Signer has the following modes of operation:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sign only"),", in which case the signer will only sign the configuration using the Operation Privileged User private key and return the JWS"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sign and apply"),", in which case the signer will sign the configuration using the Operation Privileged User private key and apply the configuration to the Entrust SAM. The Signer will return the JWS of the current configuration.")),(0,o.kt)("p",null,"The mode can be specified using the ",(0,o.kt)("a",{parentName:"p",href:"#request-metadata"},"Request Metadata"),"."),(0,o.kt)("p",null,"The Dynamic Configuration Signer is configured with the following properties:"),(0,o.kt)("table",null,(0,o.kt)("th",null,"Property"),(0,o.kt)("th",null,"Description"),(0,o.kt)("th",null,"Default Value"),(0,o.kt)("th",null,"Mandatory"),(0,o.kt)("tbody",null,(0,o.kt)(m,{data:g,mdxType:"GenTable"}))),(0,o.kt)("p",null,"See the ",(0,o.kt)("a",{parentName:"p",href:"./samples/sample-dynamic-config-signer"},"Dynamic Configuration Signer sample configuration"),"."),(0,o.kt)("h2",{id:"request-metadata"},"Request Metadata"),(0,o.kt)("p",null,"Request metadata can be used to control the behavior of the Signer. By default, the Dynamic Configuration Signer is in the ",(0,o.kt)("strong",{parentName:"p"},"sign only")," mode.\nIf you would like to apply the configuration on the Entrust SAM once it is successfully signed, you can set the ",(0,o.kt)("strong",{parentName:"p"},"sign and apply")," mode using the following request metadata:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ENTRUST_SAM_SYNC=true\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Sign and apply")," mode requires ",(0,o.kt)("inlineCode",{parentName:"p"},"ENTRUST_SAM_SERVER")," to be specified.")))}y.isMDXComponent=!0}}]);